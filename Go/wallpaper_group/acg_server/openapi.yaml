openapi: 3.0.0
servers:
  - url: 'http://petstore.swagger.io/v2'
info:
  description: ''
  version: 1.0.0
  title: ACG server 文档
  termsOfService: ''
  contact:
    email: ''
  license:
    name: Apache 2.0
    url: ''
tags: []
paths:
  /list:
    summary: 获取分页列表
    description: 最大每页最大100
    get:
      summary: ''
      description: ''
      parameters:
        - name: page
          in: query
          required: false
          schema:
            page: string
        - name: limit
          in: query
          required: false
          schema:
            limit: string
      operationId: ''
      responses:
        default:
          description: Default response
  /random:
    get:
      summary: ''
      description: ''
      parameters:
        - name: count
          in: query
          required: false
          schema:
            count: string
      operationId: ''
      responses:
        default:
          description: Default response
    summary: 随机获取
    description: 默认返回一个，最大返回100个
components:

  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - photoUrls
            properties:
              id:
                type: integer
                format: int64
              category:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                xml:
                  name: Category
              name:
                type: string
                example: doggie
              photoUrls:
                type: array
                xml:
                  name: photoUrl
                  wrapped: true
                items:
                  type: string
              tags:
                type: array
                xml:
                  name: tag
                  wrapped: true
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                  xml:
                    name: Tag
              status:
                type: string
                description: pet status in the store
                enum:
                  - available
                  - pending
                  - sold
            xml:
              name: Pet
        application/xml:
          schema:
            type: object
            required:
              - name
              - photoUrls
            properties:
              id:
                type: integer
                format: int64
              category:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                xml:
                  name: Category
              name:
                type: string
                example: doggie
              photoUrls:
                type: array
                xml:
                  name: photoUrl
                  wrapped: true
                items:
                  type: string
              tags:
                type: array
                xml:
                  name: tag
                  wrapped: true
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    name:
                      type: string
                  xml:
                    name: Tag
              status:
                type: string
                description: pet status in the store
                enum:
                  - available
                  - pending
                  - sold
            xml:
              name: Pet
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
  links: {}
  callbacks: {}
security: []
